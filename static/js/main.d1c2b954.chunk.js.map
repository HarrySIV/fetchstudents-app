{"version":3,"sources":["Components/Search/SearchBar.js","Components/PrintItems/PrintFullName.js","Components/PrintItems/PrintPicture.js","Components/PrintItems/PrintGradeAverage.js","Components/PrintItems/PrintVarious.js","Components/PrintStudentInfo.js","App.js","index.js"],"names":["SearchBar","props","type","placeholder","onChange","event","target","value","PrintFullName","fullName","printPicture","alt","src","imgURL","PrintGradeAverage","sum","grades","reduce","prevValue","curValue","parseInt","length","PrintVarious","entry","entryData","PrintStudentInfo","students","map","student","className","email","company","skill","App","useState","setStudents","filteredStudents","setFilteredStudents","useEffect","fetch","then","response","json","data","transformedStudentData","studentData","pic","firstName","lastName","text","searchQuery","filter","newFilteredStudents","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"gQAceA,EAZC,SAAAC,GAOb,OACG,uBAAOC,KAAK,OAAOC,YAAY,iBAAiBC,SANjC,SAAAC,GACfJ,EAAMG,SAASC,EAAMC,OAAOC,WCEnBC,G,MAJK,SAAAP,GACjB,OAAQ,6BAAKA,EAAMQ,aCMPC,G,MANI,SAAAT,GAChB,OACA,qBAAKU,IAAI,UAAUC,IAAKX,EAAMY,WCYlBC,G,KAhBS,SAACb,GAEtB,IACIc,EADed,EAAMe,OACFC,QAAO,SAACC,EAAWC,GACvC,OAAOC,SAASF,GAAaE,SAASD,MAKzC,OAHAJ,GAAOd,EAAMe,OAAOK,OAIjB,8BACG,2CAAcN,EAAd,WCJMO,EANI,SAAArB,GAChB,OACG,mCAAMA,EAAMsB,MAAZ,KAAqBtB,EAAMuB,cC0BlBC,EAzBS,SAAAxB,GAEtB,OAAKA,EAAMyB,SAASL,OAGlB,6BACGpB,EAAMyB,SAASC,KAAI,SAAAC,GACpB,OACE,sBAAKC,UAAU,OAAf,UACE,cAAC,EAAD,CAAchB,OAAQe,EAAQf,SAC9B,sBAAKgB,UAAU,OAAf,UACE,cAAC,EAAD,CAAepB,SAAUmB,EAAQnB,SAAUoB,UAAU,SACrD,cAAC,EAAD,CAAcN,MAAM,SAASC,UAAWI,EAAQE,MAAOD,UAAU,YACjE,cAAC,EAAD,CAAcN,MAAM,UAASC,UAAWI,EAAQG,QAASF,UAAU,YACnE,cAAC,EAAD,CAAcN,MAAM,QAAOC,UAAWI,EAAQI,MAAOH,UAAU,YAC/D,cAAC,EAAD,CAAmBb,OAAQY,EAAQZ,OAAQa,UAAU,eAEzD,+BAf8B,sCCmDvBI,MAvDf,WAEE,MAAgCC,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBS,EAAjB,KACA,EAAgDD,mBAAS,IAAzD,mBAAOE,EAAP,KAAyBC,EAAzB,KAkCA,OA/BAC,qBAAU,WAENC,MAAM,gDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAAyBD,EAAKjB,SAASC,KAAI,SAAAkB,GAC/C,MAAO,CACLhC,OAAQgC,EAAYC,IACpBrC,SAAS,GAAD,OAAKoC,EAAYE,UAAjB,YAA8BF,EAAYG,UAClDlB,MAAOe,EAAYf,MACnBC,QAASc,EAAYd,QACrBC,MAAOa,EAAYb,MACnBhB,OAAQ6B,EAAY7B,WAGxBmB,EAAYS,GACZP,EAAoBO,QAIzB,IAYD,gCACE,cAAC,EAAD,CACElB,SAAUA,EACVtB,SAZuB,SAAA6C,GACzB,GAAIA,EAAM,CACR,IAAMC,EAAcxB,EAASyB,QAAO,SAAAC,GACpC,OAAOA,EAAoB3C,SAAS4C,cAAcC,SAASL,EAAKI,kBAEhEhB,EAAoBa,QACf,GAAa,KAATD,EAAe,OAAOZ,EAAoBX,MAOrD,uBACA,cAAC,EAAD,CACEA,SAAUU,EACVhC,SAAU+B,QC7ClBoB,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d1c2b954.chunk.js","sourcesContent":["import './SearchBar.css';\r\n\r\nlet SearchBar = props => {\r\n   //capture searchBar userInput\r\n   const userInput = event => {\r\n      props.onChange(event.target.value)\r\n   } \r\n\r\n   //create searchBar as input field\r\n   return (\r\n      <input type=\"text\" placeholder=\"Search by name\" onChange={userInput} />\r\n   )\r\n}\r\n\r\nexport default SearchBar;","import './PrintFullName.css';\r\n\r\n//Print fullName seperately to give different style\r\nlet PrintFullName = props => {\r\n   return (<h2>{props.fullName}</h2>)\r\n}\r\n\r\nexport default PrintFullName;","import './PrintPicture.css';\r\n\r\n\r\n//print database defined picture\r\nlet printPicture = props => {\r\n   return (\r\n   <img alt=\"student\" src={props.imgURL} />\r\n   )\r\n}\r\n\r\nexport default printPicture;","import './PrintVarious.css';\r\n\r\nlet PrintGradeAverage = (props) => {\r\n   //set grade average and reduce it to and average value\r\n   let gradeAverage = props.grades;\r\n   let sum = gradeAverage.reduce((prevValue, curValue) => {\r\n      return parseInt(prevValue) + parseInt(curValue);\r\n   })\r\n   sum /= props.grades.length;\r\n   \r\n   //return gradeAverage\r\n   return (\r\n      <div>\r\n         <h4>Average: {sum}%</h4>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default PrintGradeAverage;","import './PrintVarious.css';\r\n\r\n//print dynamic text based on props\r\nlet PrintVarious = props => {\r\n   return (\r\n      <h4> {props.entry}: {props.entryData}</h4>\r\n   )\r\n}\r\n\r\nexport default PrintVarious;","import PrintFullName from \"./PrintItems/PrintFullName\";\r\nimport PrintPicture from \"./PrintItems/PrintPicture\";\r\nimport PrintGradeAverage from \"./PrintItems/PrintGradeAverage\";\r\nimport PrintVarious from \"./PrintItems/PrintVarious\";\r\n\r\n\r\nlet  PrintStudentInfo = props => {\r\n  //if student length is empty, display 3 dots to indicate the request has not yet been recieved\r\n  if (!props.students.length) return (<h2>...</h2>);\r\n  //return array of students\r\n  return (\r\n    <ul>\r\n      {props.students.map(student => {\r\n      return (\r\n        <div className=\"item\">\r\n          <PrintPicture imgURL={student.imgURL} />\r\n          <div className=\"text\">\r\n            <PrintFullName fullName={student.fullName} className=\"name\" />\r\n            <PrintVarious entry='E-mail' entryData={student.email} className=\"various\" />\r\n            <PrintVarious entry='Company'entryData={student.company} className=\"various\" />\r\n            <PrintVarious entry='Skill'entryData={student.skill} className=\"various\" />\r\n            <PrintGradeAverage grades={student.grades} className=\"various\" />\r\n        </div>\r\n        <hr />\r\n        </div>\r\n      );\r\n    }\r\n    )}</ul>\r\n  );\r\n}\r\n\r\nexport default PrintStudentInfo;","import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./Components/Search/SearchBar\";\nimport PrintStudentInfo from \"./Components/PrintStudentInfo\";\n\nfunction App() {\n  //set lifted state for searchBar\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n\n    //fetch database to create new array of students to display\n  useEffect(() => {\n    function fetchStudentInfo() {\n      fetch('https://api.hatchways.io/assessment/students')\n        .then(response => response.json())\n        .then(data => {\n          const transformedStudentData = data.students.map(studentData => {\n            return {\n              imgURL: studentData.pic,\n              fullName: `${studentData.firstName} ${studentData.lastName}`,\n              email: studentData.email,\n              company: studentData.company,\n              skill: studentData.skill,\n              grades: studentData.grades\n            }\n          });\n          setStudents(transformedStudentData);\n          setFilteredStudents(transformedStudentData);\n        });\n    }\n  fetchStudentInfo();\n  }, []);\n\n     //setStudents to a new array of filteredStudents\n    const searchQueryHandler = text => {\n      if (text) {\n        const searchQuery = students.filter(newFilteredStudents => {\n        return newFilteredStudents.fullName.toLowerCase().includes(text.toLowerCase());\n        })\n        setFilteredStudents(searchQuery);\n      } else if (text === '') { return setFilteredStudents(students);}\n    }\n  return (\n    <div>\n      <SearchBar \n        students={students}\n        onChange={searchQueryHandler} />\n      <hr />\n      <PrintStudentInfo \n        students={filteredStudents}  \n        onChange={setStudents} \n        />\n    </div>\n);\n};\n\n\n\n\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n"],"sourceRoot":""}